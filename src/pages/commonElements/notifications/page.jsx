import { useEffect, useState } from "react"
import { apiRoutes } from "../../../functionality/apiRoutes"
import { Helper } from "../../../functionality/helper"
import { format  } from 'date-fns';
import { useTranslation } from "react-i18next";
import { Link } from "react-router-dom";
import Pagination from "../../../components/pagination";

const reject = <svg xmlns="http://www.w3.org/2000/svg" width="27" height="27" viewBox="0 0 15 15" fill="none">
<g clip-path="url(#clip0_360_24)">
<path d="M7.5 0C9.57031 0 11.4463 0.840095 12.8043 2.19557C14.1598 3.55362 14.9999 5.42973 14.9999 7.49994C14.9999 9.57039 14.1597 11.4463 12.8043 12.8043C11.4464 14.16 9.57031 15 7.5 15C5.42969 15 3.55359 14.16 2.19556 12.8044C0.840088 11.4464 0 9.57039 0 7.49994C0 5.42973 0.840088 3.55362 2.19556 2.19557C3.55371 0.840095 5.42969 0 7.5 0ZM8.96631 4.77934C9.302 4.43851 9.84778 4.43693 10.1853 4.77616C10.5227 5.11503 10.524 5.66631 10.1886 6.00701L8.71582 7.50067L10.1901 8.99605C10.5231 9.33418 10.5183 9.8818 10.1802 10.2193C9.8418 10.557 9.29773 10.556 8.96509 10.2179L7.50061 8.7331L6.03369 10.2209C5.698 10.5619 5.15234 10.5633 4.81482 10.224C4.47754 9.88521 4.47595 9.33394 4.81165 8.99324L6.28418 7.49945L4.80981 6.00408C4.47705 5.66606 4.48157 5.11833 4.81982 4.78068C5.1582 4.44315 5.70227 4.44401 6.03491 4.78227L7.49939 6.26714L8.96631 4.77934ZM11.8285 3.17141C10.7209 2.06386 9.19067 1.37892 7.5 1.37892C5.8092 1.37892 4.27893 2.06386 3.17139 3.17153C2.06384 4.27909 1.37891 5.80937 1.37891 7.50006C1.37891 9.19075 2.06384 10.7212 3.17139 11.8286C4.27893 12.9363 5.8092 13.6213 7.5 13.6213C9.19067 13.6213 10.7209 12.9364 11.8285 11.8286C12.936 10.7212 13.621 9.19075 13.621 7.50006C13.621 5.80937 12.9362 4.27909 11.8285 3.17141Z" fill="#FF4141"/>
</g>
<defs>
<clipPath id="clip0_360_24">
<rect width="15" height="15" fill="white"/>
</clipPath>
</defs>
</svg>
const accept = <svg xmlns="http://www.w3.org/2000/svg" width="27" height="27" viewBox="0 0 15 15" fill="none">
<g clip-path="url(#clip0_360_28)">
<path d="M4.19775 8.29883C4.16284 8.26123 4.13159 8.22095 4.10474 8.17908C4.07776 8.13696 4.0542 8.09192 4.03479 8.04517C3.96997 7.89075 3.95239 7.724 3.97974 7.56494C4.00708 7.40698 4.07886 7.25598 4.19263 7.13184L4.23413 7.08911C4.51404 6.82239 4.9386 6.77271 5.27161 6.97302C5.31921 7.00146 5.36462 7.03528 5.40698 7.07397L5.41113 7.07776C5.64685 7.30383 6.04565 7.67358 6.30749 7.90662L6.53223 8.10815L9.28271 5.22302C9.32141 5.18311 9.36401 5.14734 9.40906 5.11609C9.4552 5.08423 9.50366 5.05725 9.55371 5.0354C9.60425 5.01331 9.65771 4.99597 9.7124 4.98401C9.76697 4.97192 9.82263 4.96509 9.87793 4.96387H9.8811C9.93616 4.96326 9.99011 4.96716 10.0448 4.97644C10.0981 4.98547 10.1517 5 10.2075 5.02148C10.2589 5.04114 10.3082 5.0658 10.3549 5.09522C10.3994 5.12341 10.4429 5.15698 10.4838 5.19556L10.5035 5.2135C10.5421 5.25171 10.5769 5.29321 10.6073 5.33728C10.6385 5.38232 10.6653 5.43079 10.6869 5.48108C10.7092 5.53162 10.7266 5.58508 10.7386 5.63965C10.7509 5.69324 10.7574 5.7489 10.7588 5.80566V5.83374C10.7583 5.88245 10.7537 5.93188 10.7449 5.98071C10.7352 6.03381 10.7207 6.08606 10.7014 6.13586C10.6819 6.18689 10.6569 6.23657 10.6273 6.28357C10.5983 6.32959 10.5641 6.37378 10.5258 6.41418L7.20312 9.90051C7.16406 9.94226 7.12219 9.97888 7.07837 10.0101C7.03332 10.0424 6.98474 10.0701 6.93396 10.0933C6.88306 10.1162 6.83008 10.1344 6.77673 10.147C6.72363 10.1597 6.66821 10.1672 6.61194 10.1698L6.59668 10.1702C6.54504 10.1713 6.49414 10.1682 6.44519 10.1606L6.43274 10.1582C6.38208 10.1497 6.33276 10.137 6.28564 10.1204C6.23425 10.1021 6.18396 10.0785 6.13599 10.0502L6.1283 10.0453C6.08301 10.0179 6.04077 9.98706 6.00232 9.95325L5.99463 9.94592C5.80176 9.76697 5.59216 9.58484 5.38025 9.40076C5.01318 9.08179 4.50403 8.6217 4.19885 8.29968L4.19775 8.29883ZM7.5 0C9.57031 0 11.4463 0.84021 12.8043 2.19568C14.1598 3.55371 14.9999 5.42969 14.9999 7.5C14.9999 9.57043 14.1597 11.4464 12.8043 12.8044C11.4464 14.1599 9.57031 15 7.5 15C5.42956 15 3.55359 14.1599 2.19556 12.8044C0.840088 11.4464 0 9.57031 0 7.49988C0 5.42969 0.840088 3.55371 2.19556 2.19568C3.55371 0.84021 5.42956 0 7.5 0ZM11.8285 3.17151C10.7209 2.06384 9.19067 1.37891 7.5 1.37891C5.8092 1.37891 4.27893 2.06384 3.17139 3.17151C2.06384 4.27905 1.37891 5.80933 1.37891 7.49988C1.37891 9.19067 2.06384 10.7209 3.17139 11.8285C4.27893 12.936 5.8092 13.6211 7.5 13.6211C9.19067 13.6211 10.7209 12.9362 11.8285 11.8285C12.936 10.7208 13.621 9.19067 13.621 7.49988C13.621 5.80933 12.9362 4.27905 11.8285 3.17151Z" fill="#6BBE66"/>
</g>
<defs>
<clipPath id="clip0_360_28">
<rect width="15" height="15" fill="white"/>
</clipPath>
</defs>
</svg>
const pending = <svg xmlns="http://www.w3.org/2000/svg" width="27" height="27" viewBox="0 0 13 13" fill="none">
<g clip-path="url(#clip0_360_32)">
<path d="M6.5 0C8.29507 0 9.91993 0.72733 11.096 1.90397C12.2721 3.08007 13 4.70548 13 6.5C13 8.29452 12.2727 9.91993 11.096 11.096C9.91993 12.2721 8.29452 13 6.5 13C4.70493 13 3.08007 12.2727 1.90397 11.096C0.72733 9.91993 0 8.29452 0 6.5C0 4.70548 0.72733 3.08007 1.90397 1.90397C3.08007 0.72733 4.70493 0 6.5 0ZM5.96859 3.2946C5.96859 3.09813 6.12785 2.93887 6.32432 2.93887C6.5208 2.93887 6.68005 3.09813 6.68005 3.2946V6.57826L9.15046 8.04277C9.31902 8.14238 9.37539 8.36019 9.27579 8.5293C9.17618 8.69786 8.95837 8.75423 8.78926 8.65463L6.16288 7.09763C6.0474 7.03852 5.96859 6.91867 5.96859 6.78075V3.2946ZM10.5931 2.40692C9.54559 1.35943 8.09859 0.711459 6.5 0.711459C4.90141 0.711459 3.45441 1.35943 2.40692 2.40692C1.35943 3.45441 0.711459 4.90141 0.711459 6.5C0.711459 8.09859 1.35943 9.54559 2.40692 10.5931C3.45441 11.6406 4.90141 12.2885 6.5 12.2885C8.09859 12.2885 9.54559 11.6406 10.5931 10.5931C11.6406 9.54559 12.2885 8.09859 12.2885 6.5C12.2885 4.90141 11.6406 3.45441 10.5931 2.40692Z" fill="#F59E0B"/>
</g>
<defs>
<clipPath id="clip0_360_32">
<rect width="13" height="13" fill="white"/>
</clipPath>
</defs>
</svg>

const NotificationList = ()=>{
    const user = localStorage.getItem("user") ? JSON.parse(localStorage.getItem("user")) : {}
    const { i18n } = useTranslation()
    const language = i18n.language.split('-')[0];
    const [ data, setData ] = useState([])
    const [ loading, setLoading ] = useState(true)
    // For Pagination
    const [ currentPage, setCurrentPage ] = useState(1)
    const [ lastPage , setLastPage ] = useState(1)
    useEffect(()=>{
        const abortController = new AbortController();
        const signal = abortController.signal;
        getData(1,signal)
        return () => abortController.abort() 
    },[])
    const getData = async (page=1,signal) => {
        setLoading(true)
        const temp = {page}
        const { response , message, statusCode } = await Helper({
            url : apiRoutes.notifications.list,
            signal : signal,
            method : "GET",
            params :temp,
            hasToken : true
        })
        if(response){
            setData(response.data)
            setLoading(false)

            // setLastPage(response.meta.last_page)
        }else{
            console.log(message);
  
        }
    }
    return(<div className="flex flex-col gap-3">
            <div className="flex flex-col gap-1">
                <div className="flex gap-2 items-center">
                    <Link className="cursor-pointer text-blue-500" to={user?.role == "admin" ? "/dashboard/admin" : "/dashboard"}> Dashboard</Link> / <div>Notifications</div>
                </div>
                <h2>Notifications</h2>
            </div>
            <div className="flex flex-col gap-4">
                {loading? [...Array(7)].map((_,i)=>(<div  className="h-20 w-full rounded-xl bg-gray-300 animate-pulse" key={`Skeleton_notifications_${i}`} >
                    </div>)): <>
                    { data.length > 0 ? <>
                                {
                                    data.map((e,idx)=>(<div className={`notification-item-list cursor-pointer card p-4`} key={`Notification_${e.name}_${idx}`}>
                                    <div className="flex gap-1 items-center">
                                        <div>
                                            { e.name == "New Service Request" && pending }
                                            { e.name == "Service Request Confirmed" && accept }
                                            { e.name == "New Panel Added" && accept }
                                            { e.name == "Panel Approved" && accept }
                                        </div>
                                        <div>{e.translations?.[language]?.description}</div>
                                    </div>
                                    <div className="flex justify-end">
                                        <span>{format(new Date(e.created_at), "MMM d, yyyy, h:mm a")}</span>
                                    </div>
                                </div>)) 
                                }
                                
                                
                                </>: <div className="flex flex-col gap-4 items-center">
                                    <div>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="44" height="44" viewBox="0 0 44 44" fill="none">
                                            <g clipPath="url(#clip0_358_17)">
                                            <path d="M22 0.00716146C28.0765 0.00716146 33.5765 2.46712 37.5547 6.44531C41.5329 10.4235 43.9928 15.9235 43.9928 22H43.9964V22.0036H43.9928C43.9928 28.0801 41.5329 33.5801 37.5547 37.5583C33.5765 41.5365 28.0765 43.9964 22 43.9964V44.0036H21.9964V43.9964C15.9199 43.9964 10.4199 41.5365 6.44173 37.5583C2.46712 33.5765 0.00716146 28.0801 0.00716146 22H0V21.9964H0.00716146C0.00716146 15.9235 2.46712 10.4235 6.44531 6.44531C10.4235 2.46712 15.9235 0.00716146 22 0.00716146ZM25.0973 16.4355C24.707 15.9557 24.7786 15.2503 25.2585 14.86C25.7383 14.4697 26.4437 14.5413 26.834 15.0212C26.9056 15.1107 27.0059 15.2038 27.1204 15.3005C27.7005 15.7767 28.5921 16.0954 29.5374 16.1455C30.4684 16.1956 31.4245 15.9772 32.1478 15.39C32.2946 15.2718 32.4378 15.125 32.5775 14.9567C32.9714 14.4769 33.6768 14.4053 34.1566 14.7992C34.6364 15.193 34.708 15.8984 34.3141 16.3783C34.0885 16.654 33.8343 16.901 33.5586 17.1266C32.3626 18.097 30.8551 18.4587 29.4193 18.3835C28.0013 18.3083 26.6263 17.7998 25.6953 17.0371C25.4805 16.8617 25.2764 16.6576 25.0973 16.4355ZM14.0221 31.4818C13.4027 31.5068 12.8799 31.027 12.8548 30.4111C12.8298 29.7917 13.3096 29.2725 13.9255 29.2438H13.9398C14.6702 29.2116 17.2734 29.2223 20.2061 29.2331C24.1055 29.2474 28.6029 29.2653 29.96 29.1865C30.5794 29.1507 31.1094 29.6234 31.1452 30.2393C31.181 30.8551 30.7119 31.3887 30.0924 31.4245C28.7282 31.5068 24.1592 31.4889 20.1953 31.471C17.3128 31.4603 14.7562 31.4495 14.0329 31.4818H14.0221ZM9.68229 16.4355C9.29199 15.9557 9.36361 15.2503 9.84342 14.86C10.3232 14.4697 11.0286 14.5413 11.4189 15.0212C11.4906 15.1107 11.5908 15.2038 11.7054 15.3005C12.2855 15.7767 13.1771 16.0954 14.1224 16.1455C15.0534 16.1956 16.0094 15.9772 16.7327 15.39C16.8796 15.2718 17.0228 15.125 17.1624 14.9567C17.5563 14.4769 18.2617 14.4053 18.7415 14.7992C19.2214 15.193 19.293 15.8984 18.8991 16.3783C18.6735 16.654 18.4193 16.901 18.1436 17.1266C16.9476 18.097 15.4401 18.4587 14.0042 18.3835C12.5863 18.3083 11.2113 17.7998 10.2803 17.0371C10.0654 16.8617 9.86133 16.6576 9.68229 16.4355ZM22 2.80371V2.81087H21.9964L22 2.80371C16.7041 2.80371 11.9059 4.95573 8.42904 8.43262C4.95215 11.9059 2.80371 16.7041 2.80371 22H2.81087V22.0036H2.80371C2.80371 27.2995 4.95573 32.0977 8.43262 35.571C11.9095 39.0479 16.7077 41.1963 22.0036 41.1999V41.1927H22.0072V41.1999C27.3031 41.1999 32.1012 39.0479 35.5745 35.571C39.0514 32.0941 41.2035 27.2959 41.2035 22H41.1999V21.9964H41.2035C41.2035 16.7041 39.0514 11.9059 35.5781 8.42904C32.0941 4.95573 27.2959 2.80371 22 2.80371Z" fill="#19770D"/>
                                            </g>
                                            <defs>
                                            <clipPath id="clip0_358_17">
                                            <rect width="44" height="44" fill="white"/>
                                            </clipPath>
                                            </defs>
                                        </svg>
                                    </div>
                                    No notifications found yet
                                </div>
                                }
                            </>}
            </div>
            {/* Pagination */}
            <Pagination currentPage={currentPage} lastPage={lastPage} returnedPageNumber={(res)=>{
                setCurrentPage(res)
                getData(res)
            }} />
    </div>)
}
export default NotificationList