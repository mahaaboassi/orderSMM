
import { adsImages, logo, panals } from '../data/data';
// Swiper
import { Swiper, SwiperSlide } from 'swiper/react';
import { Autoplay , EffectFade} from 'swiper/modules';
import 'swiper/css';
import 'swiper/css/effect-fade';
import { useTranslation } from 'react-i18next';
import { Helper } from '../functionality/helper';
import { apiRoutes } from '../functionality/apiRoutes';
import { useEffect, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useDispatch } from 'react-redux';
import { updateService } from '../features/servicesInfo';


const Footer = ()=>{
    const { t } = useTranslation()
    const dispatch = useDispatch()
    const navigate = useNavigate()
    const [ data, setData ] = useState([])
    const [ platforms, setPlatforms ] = useState([])
    const [ links, setLinks ] = useState({
        bumps: "",
        ads: ""
    })
    const [isloading, setIsLoading ] = useState(false)
    useEffect(()=>{
        const abortController = new AbortController()
        const signal  = abortController.signal
        getData(signal)
        setIsLoading(true)
        getPlatforms(signal)
        getServices(signal)
        return () => abortController.abort() 
    },[])
    const getData = async (signal)=>{
        const { response , message, statusCode } = await Helper({
            url : apiRoutes.panel.list,
            signal : signal,
            method : "GET",
            params : {is_ad : 1},
            hasToken : true
        })
        if(response){
            setData(response.data)
            setIsLoading(false)
            
        }else{
            console.log(message);
        }
    }
    const getPlatforms = async (signal) => {
        const { response , message, statusCode } = await Helper({
            url : apiRoutes.platforms.list,
            signal : signal,
            method : "GET",
            hasToken : true
        })
        if(response){
            console.log(response);
            setPlatforms(response.data.sort(() => 0.5 - Math.random()).slice(0, 12))
        }else{
            console.log(message);
        }        
    }
    const getServices = async (signal)=>{
        const { response , message, statusCode } = await Helper({
            url : apiRoutes.services.list,
            signal : signal,
            method : "GET",
            params : {results : 20},
            hasToken : true
        })
        if(response){
            response.data.forEach((e)=>{
                if(e.slug == "bumps") setLinks(prev=>({...prev, bumps:`/our-services/${e.slug}/${e.id}`}))

                if(e.slug == "ads")  setLinks(prev=>({...prev, ads:`/our-services/${e.slug}/${e.id}`}))
               
               
                dispatch(updateService({
                    key: e.slug,
                    value: { slug: e.slug, id: e.id }
                }));
                
            })
            console.log("data",response.data);
            
            
        }else{
            console.log(message);
        }
    }
    return(<footer className='mt-10 md:mt-20'>
        <div className="first-footer grid grid-cols-1 gap-5  sm:grid-cols-2 lg:grid-cols-4 px-2 lg:px-16 py-10">
            <div className='flex flex-col gap-5 pr-4'>
                <div >{logo}</div>
                <p>{t("footer.desc-1")}</p>
                <p>{t("footer.desc-2")}</p>
            </div>
            <div className='flex flex-col gap-5'>
                <h5>{t("footer.title-1")}</h5>
                <div className='flex flex-wrap gap-5 services-icons'>
                    {platforms.map((e,idx)=>(<div onClick={()=>navigate(`/platforms/${e.id}?keywords=${e.name}`)} 
                        className='flex gap-1 items-center cursor-pointer hover:text-(--grey_3) hover:underline' key={`Services_SMM_${idx}_${e.name}`}>
                            <div><img className='w-[25px] object-contain' src={e.photo} alt={e.name} /> </div> 
                            <div >{e.name}</div>
                        </div>))}
                </div>
            </div>
            <div className='flex flex-col gap-5'>
                <h5>{t("footer.title-2")}</h5>
                <div>
                      <Swiper
                            modules={[Autoplay,EffectFade]}
                            slidesPerView={1}
                            effect={'fade'}
                            autoplay={{ delay: 1000 }}
                            loop={true}
                            >
                        
                            {data.map((ele,idx)=>( <SwiperSlide key={`Panals_${ele.name}_${idx}`}
                                onClick={()=>{
                                    localStorage.setItem("click",JSON.stringify({
                                    service_id: 10,
                                    panel_id: ele.id
                                }))
                                 navigate(`/smm-panel/${ele?.translations?.en.name}/${ele.id}`)
                                }}  
                            >
                                <div className="flex items-center cursor-pointer">
                                    <img className="object-cover w-full h-42 " src={ele?.photo ?? "" } alt={ele?.translations?.en?.name} />
                                </div>
                            </SwiperSlide>))}
        
                        </Swiper>
                </div>
            </div>
            <div className='flex flex-col gap-3 justify-between'>
                <Link to="/smm-panel/new">
                <button className='outline-btn w-full flex items-center justify-center gap-2' >
                    <div className='flex items-center'>
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 14 14" fill="none">
                            <g clipPath="url(#clip0_235_21)">
                            <path fillRule="evenodd" clipRule="evenodd" d="M11.9501 2.05044C14.6837 4.78416 14.6837 9.21639 11.9501 11.9501C9.21639 14.6837 4.78416 14.6837 2.05044 11.9501C-0.683156 9.21639 -0.683156 4.78416 2.05044 2.05044C4.78416 -0.683156 9.21639 -0.683156 11.9501 2.05044ZM10.6652 6.60253C10.8848 6.60253 11.0628 6.78061 11.0628 7.00016C11.0628 7.21982 10.8847 7.39779 10.6652 7.39779H7.3979V10.6652C7.3979 10.8848 7.21982 11.0628 7.00027 11.0628C6.78072 11.0628 6.60276 10.8847 6.60276 10.6652V7.3979H3.33527C3.11561 7.3979 2.93753 7.21982 2.93753 7.00027C2.93753 6.78072 3.11561 6.60265 3.33527 6.60265H6.60265V3.33515C6.60265 3.11561 6.78072 2.93753 7.00016 2.93753C7.21982 2.93753 7.39779 3.11561 7.39779 3.33515V6.60253H10.6652Z" fill="white"/>
                            </g>
                            <defs>
                            <clipPath id="clip0_235_21">
                            <rect width="14" height="14" fill="white"/>
                            </clipPath>
                            </defs>
                        </svg>
                    </div>
                    {t("footer.btn-1")}</button>
                </Link>
                <Link to={links.ads}>
                    <button className='outline-btn w-full flex items-center justify-center gap-2 ' >
                    <div>
                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="23" viewBox="0 0 22 20" fill="none">
                            <g clipPath="url(#clip0_235_25)">
                            <path fillRule="evenodd" clipRule="evenodd" d="M-3.24124e-05 11.8802C-0.0107746 10.8556 0.386686 9.94703 1.31947 9.65001L1.34274 9.61135C1.37002 9.55875 1.40636 9.51118 1.45016 9.47075C1.50662 9.43008 1.5704 9.40027 1.63815 9.38288L1.69007 9.36355C6.21253 7.73262 8.25176 5.28446 9.42445 3.6219C9.42445 5.25458 9.8416 7.38288 10.5757 9.44263C11.3294 11.5516 12.4179 13.6096 13.7464 15.0244C12.3624 14.6377 10.6258 14.1456 7.80059 14.5235C7.68228 14.8064 7.61445 15.1072 7.60007 15.4128C7.59075 15.508 7.60187 15.6042 7.6327 15.695C7.66354 15.7858 7.71341 15.8693 7.7791 15.94L7.82207 15.9787C8.00111 16.1386 8.08884 16.2177 8.12822 16.36C8.15456 16.5485 8.14668 16.7401 8.10495 16.9259L8.08884 17.0437C8.02259 17.5586 8.27682 17.6641 8.52926 17.7695C8.78171 17.875 8.97865 17.9593 9.0807 18.2423C9.08788 18.2652 9.08788 18.2897 9.0807 18.3126C8.97686 18.8398 8.63311 19.128 8.28757 19.418C8.20342 19.4901 8.11748 19.5621 8.04408 19.6307H8.03333C7.33151 20.1825 6.85706 20.0349 6.4972 19.592C6.21432 19.2405 6.01738 18.7133 5.83477 18.2194L5.75599 18.005C5.46025 17.1368 5.22106 16.251 5.03984 15.353L4.97897 15.0894C4.82321 15.1316 4.66029 15.179 4.4902 15.2282C4.27536 15.2897 4.06051 15.3565 3.84746 15.4233L3.77943 15.4479C3.74407 15.4707 3.70268 15.4829 3.66037 15.4829C3.61805 15.4829 3.57666 15.4707 3.54131 15.4479C2.41159 15.817 1.46807 15.2897 0.837858 14.411C0.571806 14.0401 0.365862 13.6311 0.227344 13.1983C0.0854683 12.7725 0.00883963 12.3282 -3.24124e-05 11.8802ZM15.7212 2.83982C15.6646 2.88219 15.6 2.91309 15.5311 2.93073C15.4622 2.94837 15.3905 2.95241 15.32 2.94259C15.2496 2.93278 15.1818 2.90932 15.1206 2.87358C15.0595 2.83783 15.0062 2.79051 14.9638 2.73437L14.9513 2.71856C14.8692 2.60539 14.8351 2.46537 14.8562 2.328C14.8772 2.19063 14.9518 2.06665 15.0641 1.98218C15.9342 1.35125 16.8007 0.715041 17.6709 0.0981698C17.7856 0.0166151 17.9279 -0.0186116 18.0683 -0.000248489C18.2117 0.0213286 18.3404 0.0977992 18.4264 0.212405V0.221193C18.509 0.33461 18.5425 0.475525 18.5195 0.613108C18.5092 0.682946 18.4847 0.750042 18.4475 0.810419C18.4103 0.870796 18.3611 0.923226 18.3029 0.964602L15.7212 2.83982ZM18.5481 12.9804C18.4773 12.979 18.4075 12.9638 18.3426 12.9357C18.2778 12.9077 18.2193 12.8673 18.1704 12.817C18.121 12.7672 18.0822 12.7084 18.0561 12.6438C18.0299 12.5793 18.0171 12.5103 18.0182 12.4409V12.4286C18.0182 12.3583 18.0325 12.2887 18.0602 12.2239C18.088 12.1591 18.1287 12.1005 18.1799 12.0513C18.2311 12.0022 18.2918 11.9636 18.3584 11.9379C18.4251 11.9121 18.4963 11.8997 18.5678 11.9013C19.5293 11.9013 20.5068 11.9365 21.4682 11.9541C21.6128 11.9573 21.7502 12.0163 21.8507 12.1183C21.9512 12.2202 22.0068 12.357 22.0053 12.4989C22.0025 12.6414 21.9427 12.7771 21.8388 12.8767C21.7879 12.9259 21.7274 12.9646 21.661 12.9906C21.5946 13.0165 21.5236 13.0292 21.4521 13.0279L18.5535 12.9734L18.5481 12.9804ZM18.6323 10.2194C18.5613 10.2254 18.4898 10.2175 18.4219 10.1961C18.3541 10.1747 18.2913 10.1403 18.2371 10.0948C18.1829 10.0493 18.1385 9.99373 18.1065 9.93124C18.0744 9.86876 18.0554 9.80064 18.0504 9.73086V9.71856C18.0424 9.57937 18.0895 9.44253 18.182 9.3367C18.2744 9.23088 18.405 9.16429 18.5464 9.15089C19.4415 9.08059 20.3528 9.00502 21.2498 8.94878C21.3931 8.94004 21.5342 8.9869 21.6427 9.07926C21.7512 9.17162 21.8184 9.30211 21.8299 9.44263C21.8356 9.51266 21.8269 9.58308 21.8045 9.64978C21.782 9.71648 21.7462 9.7781 21.6992 9.83103C21.6048 9.93869 21.471 10.0056 21.3268 10.0173C20.4585 10.1017 19.5042 10.172 18.6323 10.2177V10.2194ZM18.2456 7.65529C18.1763 7.67459 18.1039 7.6803 18.0324 7.67211C17.9609 7.66391 17.8918 7.64197 17.8289 7.60753C17.7661 7.57309 17.7107 7.52683 17.6661 7.4714C17.6215 7.41597 17.5884 7.35244 17.5688 7.28446C17.5492 7.2173 17.5434 7.14698 17.5517 7.07759C17.5599 7.0082 17.5822 6.94112 17.6172 6.88024C17.688 6.75597 17.8056 6.66386 17.9448 6.62365C18.8776 6.38288 19.8068 6.08763 20.7396 5.84158C20.808 5.82231 20.8796 5.81658 20.9503 5.82473C21.021 5.83288 21.0893 5.85473 21.1513 5.88903C21.2764 5.9574 21.3695 6.07084 21.4109 6.20538C21.4502 6.3424 21.4327 6.48911 21.3623 6.61354C21.2919 6.73797 21.1742 6.83004 21.035 6.8697L18.2438 7.65177L18.2456 7.65529ZM17.1176 5.13859C17.0535 5.16998 16.9836 5.18865 16.9121 5.19354C16.8405 5.19842 16.7687 5.18943 16.7007 5.16707C16.6327 5.14472 16.5699 5.10943 16.5158 5.06323C16.4617 5.01703 16.4174 4.96082 16.3854 4.89782C16.3527 4.83503 16.3331 4.76644 16.3279 4.6961C16.3227 4.62576 16.3319 4.55511 16.3549 4.48833C16.4012 4.3534 16.4996 4.24169 16.6289 4.17726L19.3144 2.86091C19.3784 2.82831 19.4483 2.80868 19.5202 2.80317C19.592 2.79767 19.6642 2.80641 19.7326 2.82888C19.8009 2.85134 19.8639 2.88707 19.9179 2.93394C19.9718 2.98081 20.0156 3.03785 20.0467 3.10168C20.0791 3.16459 20.0983 3.23325 20.1033 3.30358C20.1082 3.37392 20.0987 3.44451 20.0753 3.51117C20.029 3.64563 19.9306 3.75677 19.8014 3.82049L17.1159 5.13859H17.1176ZM10.5184 2.10871C10.5416 2.08235 10.5667 2.05775 10.59 2.0349C10.6634 1.95241 10.7537 1.88595 10.8549 1.83982C10.9705 1.80181 11.0947 1.79693 11.213 1.82576C11.6159 1.88903 12.0473 2.17726 12.486 2.61838C13.5602 3.70625 14.6917 5.78183 15.4974 7.96284C16.303 10.1439 16.7864 12.4198 16.5447 13.8978C16.4534 14.4479 16.2636 14.8925 15.9521 15.186L15.936 15.1983C15.805 15.2908 15.6534 15.351 15.4938 15.3741C15.4797 15.3614 15.4647 15.3497 15.449 15.3389C14.3766 14.5867 13.4277 13.3389 12.6292 11.8715C12.8333 11.9101 13.0947 11.7607 13.3453 11.5059C14.5986 10.2089 13.9827 7.94176 12.4197 7.41627C11.7824 7.20538 11.1486 7.20538 10.8979 7.32664L10.8711 7.3407C10.2981 5.17023 10.1352 3.1632 10.5184 2.10871Z" fill="white"/>
                            </g>
                            <defs>
                            <clipPath id="clip0_235_25">
                            <rect width="22" height="20" fill="white"/>
                            </clipPath>
                            </defs>
                        </svg>
                    </div>
                    {t("footer.btn-2")}</button>
                </Link>
                
                <Link to={links.bumps}>
                    <button className='outline-btn w-full flex items-center justify-center gap-2' >
                        <div>
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 23 22" fill="none">
                                <g clipPath="url(#clip0_258_5)">
                                <path d="M2.87509 15.6697C3.08847 15.508 3.39731 15.5462 3.5639 15.7533C3.73048 15.9604 3.69117 16.2602 3.47779 16.4219L1.00148 18.2898L0.982759 20.8063L4.02434 20.641L5.67522 18.0936C5.81935 17.8719 6.12257 17.8047 6.35092 17.9446C6.57928 18.0845 6.64853 18.3788 6.50441 18.6005L4.72625 21.3423C4.64576 21.475 4.49977 21.5676 4.32944 21.5767L0.516695 21.7857C0.507336 21.7857 0.497977 21.7857 0.488619 21.7857C0.219087 21.7838 9.329e-05 21.5713 0.00196503 21.3078L0.0262977 18.0899C0.0150672 17.9355 0.0805783 17.7792 0.215344 17.6775L2.87509 15.6697ZM7.50392 9.79904C8.73927 6.21414 10.4051 3.67218 12.7485 2.07142C15.1799 0.408887 18.3058 -0.219788 22.4011 0.0672947C22.6838 0.0872815 22.9009 0.312587 22.9046 0.5815C23.3014 4.88593 22.4404 7.93845 20.6061 10.2515C18.8411 12.4755 16.1926 13.9799 12.9058 15.2427V19.4454C12.9058 19.6507 12.7841 19.8306 12.6063 19.916L9.25961 21.9238C9.00506 22.0764 8.67189 22.0001 8.51466 21.753C8.47348 21.6875 8.44728 21.6167 8.43792 21.5458C7.69671 16.0476 6.9087 15.7842 2.27801 14.2288C1.72397 14.0435 1.12688 13.8418 0.722587 13.7037C0.439953 13.6074 0.292085 13.3058 0.391288 13.0333C0.411877 12.9751 0.443697 12.9224 0.481132 12.8752L2.68792 9.82266C2.79835 9.67004 2.97804 9.59009 3.15585 9.59917L7.50392 9.79904ZM16.9787 5.74899C16.6792 5.45828 16.2674 5.28021 15.8107 5.28021C15.3559 5.28021 14.9422 5.46009 14.6428 5.74899C14.3433 6.03971 14.1598 6.43945 14.1598 6.88279C14.1598 7.32431 14.3451 7.72587 14.6428 8.01658C14.9422 8.3073 15.354 8.48537 15.8107 8.48537C16.2656 8.48537 16.6792 8.30548 16.9787 8.01658C17.2782 7.72587 17.4616 7.32613 17.4616 6.88279C17.4616 6.43945 17.2763 6.03971 16.9787 5.74899Z" fill="white"/>
                                </g>
                                <defs>
                                <clipPath id="clip0_258_5">
                                <rect width="23" height="22" fill="white"/>
                                </clipPath>
                                </defs>
                            </svg>
                        </div>
                    {t("footer.btn-3")}</button>
                </Link>
                <Link to={"/about"}>
                 <button className='outline-btn w-full flex items-center justify-center gap-2' >
                    <div>
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 19 19" fill="none">
                            <g clipPath="url(#clip0_236_31)">
                            <path d="M9.5 1.42716C9.21395 1.42716 8.93718 1.43953 8.67277 1.46582C8.40837 1.49211 8.14087 1.53076 7.87337 1.58488C7.60742 1.63745 7.3492 1.70394 7.10026 1.7797C6.85441 1.85547 6.61165 1.94515 6.37354 2.04565L6.35807 2.05339C6.10604 2.16162 5.86637 2.27759 5.63599 2.40129C5.40405 2.52653 5.1814 2.66105 4.96956 2.8033C4.75619 2.9471 4.54899 3.10018 4.35262 3.26253C4.15625 3.42489 3.96606 3.59652 3.78361 3.78052L3.77743 3.7867C3.59497 3.96916 3.42334 4.1578 3.26253 4.35262C3.10018 4.55054 2.9471 4.75619 2.8033 4.96956C2.66105 5.17985 2.52808 5.40251 2.40283 5.63444C2.27913 5.86483 2.16162 6.10604 2.05339 6.35653L2.04565 6.37354L2.03483 6.39518C1.93742 6.62712 1.85083 6.86523 1.77661 7.10799C1.70085 7.35384 1.63745 7.60742 1.58488 7.87028C1.53076 8.13778 1.49211 8.40373 1.46582 8.66968C1.43953 8.93563 1.42716 9.21086 1.42716 9.49691C1.42716 9.78296 1.43953 10.0597 1.46582 10.3241C1.49211 10.5885 1.53076 10.856 1.58488 11.1235C1.639 11.3895 1.70394 11.6477 1.78125 11.8966C1.85702 12.1394 1.9436 12.3806 2.04411 12.6172C2.05029 12.628 2.05493 12.6388 2.05957 12.6497C2.16626 12.8971 2.28068 13.1336 2.40438 13.3609C2.52962 13.5929 2.66414 13.8155 2.80485 14.0258C2.94865 14.2407 3.10173 14.4464 3.26563 14.6443C3.42334 14.836 3.59188 15.0216 3.76969 15.1994C3.78052 15.2087 3.7898 15.2179 3.79907 15.2288C3.97843 15.4081 4.16398 15.5751 4.35417 15.7328C4.55208 15.8952 4.75773 16.0483 4.97111 16.1921C5.1814 16.3343 5.40405 16.4673 5.63599 16.5925C5.86637 16.7162 6.10758 16.8337 6.35807 16.942L6.39054 16.9574C6.62557 17.0564 6.86523 17.143 7.11263 17.2188C7.35693 17.2945 7.61206 17.3579 7.87337 17.4105C8.14087 17.4646 8.40682 17.5033 8.67277 17.5295C8.93872 17.5558 9.21395 17.5682 9.5 17.5682C9.78605 17.5682 10.0628 17.5558 10.3272 17.5295C10.5916 17.5033 10.8591 17.4646 11.1266 17.4105C11.3926 17.3564 11.6508 17.2914 11.8997 17.2141C12.1456 17.1383 12.3883 17.0487 12.628 16.9466L12.6419 16.9404V16.9389C12.894 16.8306 13.1336 16.7147 13.364 16.591C13.5959 16.4657 13.8186 16.3312 14.0304 16.189C14.2438 16.0452 14.451 15.8921 14.6474 15.7297C14.8407 15.5705 15.0262 15.4019 15.2071 15.221C15.2164 15.2118 15.2241 15.2025 15.2349 15.1932C15.4128 15.0154 15.5798 14.8298 15.7375 14.6396C15.8998 14.4417 16.0544 14.2361 16.1982 14.0212C16.3405 13.8109 16.4735 13.5882 16.5987 13.3563C16.7224 13.1259 16.8399 12.8862 16.9482 12.6342L16.9636 12.6002C17.0626 12.3667 17.1492 12.127 17.2249 11.8812C17.3007 11.6353 17.3641 11.3818 17.4167 11.1189C17.4708 10.8514 17.5094 10.5854 17.5357 10.3195C17.562 10.0535 17.5744 9.77832 17.5744 9.49227C17.5744 9.20622 17.562 8.92944 17.5357 8.66504C17.5094 8.40064 17.4708 8.13314 17.4167 7.86564C17.3625 7.59969 17.2976 7.34147 17.2203 7.09253C17.1445 6.84668 17.0549 6.60392 16.9528 6.36426L16.9466 6.35034C16.8384 6.09831 16.7224 5.85864 16.5987 5.62826C16.4735 5.39632 16.3389 5.17367 16.1982 4.96338C16.0544 4.75 15.9014 4.54281 15.739 4.34644C15.5813 4.1547 15.4112 3.96761 15.2319 3.78825C15.221 3.77897 15.2118 3.76969 15.204 3.76042C15.0247 3.58105 14.8407 3.41406 14.6489 3.25635C14.451 3.09399 14.2454 2.94092 14.032 2.79712C13.8202 2.65487 13.599 2.52189 13.3671 2.39665C13.1367 2.27295 12.8971 2.15544 12.645 2.04875L12.6156 2.03483C12.3806 1.93587 12.1394 1.84774 11.892 1.77197C11.6477 1.69621 11.3926 1.63281 11.1297 1.58024C10.8622 1.52612 10.5963 1.48747 10.3303 1.46118C10.0628 1.43953 9.78605 1.42716 9.5 1.42716ZM9.79378 4.81958C10.1324 4.81958 10.3984 4.91699 10.5916 5.11027C10.7834 5.30355 10.8808 5.56795 10.8808 5.90967C10.8808 6.25602 10.7153 6.56217 10.3844 6.83276C10.0505 7.10181 9.6639 7.23788 9.22168 7.23788C8.89079 7.23788 8.62638 7.1451 8.42383 6.95955C8.22127 6.77091 8.12077 6.52816 8.12077 6.2251C8.12077 5.84318 8.28621 5.51538 8.61401 5.23551C8.94027 4.95719 9.33455 4.81958 9.79378 4.81958ZM11.6817 14.1804H7.31828V13.446H8.13778V8.96037H7.31828V8.3759H9.35775C9.87264 8.3759 10.3798 8.31405 10.8808 8.18726V13.446H11.6817V14.1804ZM7.59505 0.185547C7.89811 0.125244 8.212 0.0788574 8.53516 0.0479329C8.85832 0.0154622 9.17993 0 9.5 0C9.82007 0 10.1417 0.0154622 10.4648 0.0479329C10.788 0.0788574 11.1019 0.125244 11.4049 0.185547C11.7049 0.24585 12.0049 0.321615 12.3049 0.414388C12.5955 0.504069 12.8831 0.609212 13.1676 0.729818L13.197 0.740641L13.2063 0.743734C13.4924 0.867432 13.7707 1.00195 14.0382 1.1473C14.3026 1.2911 14.5639 1.44881 14.8221 1.62199C15.0741 1.79207 15.3184 1.97298 15.5535 2.16626C15.7885 2.35954 16.0127 2.56209 16.2245 2.77702C16.4379 2.9904 16.642 3.2146 16.8353 3.44808C17.0286 3.68311 17.2095 3.92586 17.3796 4.17944C17.5481 4.43148 17.7058 4.69279 17.8527 4.96183H17.8542C17.9996 5.23088 18.1357 5.5092 18.2578 5.79525C18.2609 5.80298 18.264 5.81071 18.2671 5.81844C18.3877 6.1014 18.4928 6.39054 18.5841 6.68433C18.6784 6.98739 18.7557 7.29045 18.816 7.59505C18.8763 7.89811 18.9227 8.212 18.9536 8.53516C18.9845 8.85832 19 9.17993 19 9.5C19 9.82007 18.9845 10.1417 18.9521 10.4648C18.9211 10.788 18.8748 11.1019 18.8145 11.4049C18.7542 11.7049 18.6784 12.0049 18.5856 12.3049C18.4959 12.5971 18.3892 12.8862 18.2686 13.1738L18.2625 13.1877L18.2547 13.2048C18.131 13.4908 17.9965 13.7691 17.8512 14.0366C17.7074 14.301 17.5496 14.5623 17.3765 14.8206C17.2064 15.0726 17.0255 15.3169 16.8322 15.5519C16.6389 15.7869 16.4364 16.0096 16.2214 16.223C16.0081 16.4364 15.7839 16.6405 15.5488 16.8337C15.3138 17.027 15.071 17.2079 14.819 17.3765C14.567 17.545 14.3057 17.7027 14.0366 17.8496C13.7614 17.998 13.4846 18.1341 13.2032 18.2547C13.1955 18.2578 13.1877 18.2609 13.1785 18.264C12.8955 18.3846 12.6064 18.4897 12.3126 18.581C12.0095 18.6753 11.7065 18.7526 11.4034 18.8129C11.1003 18.8732 10.7865 18.9196 10.4633 18.9505C10.1401 18.9814 9.81852 18.9969 9.49845 18.9969C9.17839 18.9969 8.85677 18.9814 8.53361 18.9505C8.21045 18.9196 7.89657 18.8732 7.59351 18.8129C7.29354 18.7526 6.99357 18.6768 6.6936 18.5841C6.40137 18.4944 6.11222 18.3877 5.82617 18.2671L5.79525 18.2547C5.5092 18.131 5.23088 17.9965 4.96338 17.8512C4.69897 17.7074 4.43766 17.5496 4.17944 17.3765C3.92741 17.2079 3.68311 17.0255 3.44963 16.8337C3.2146 16.6405 2.9904 16.4364 2.77702 16.223C2.56364 16.0096 2.35954 15.7854 2.16626 15.5519C1.97298 15.3169 1.79207 15.0726 1.62199 14.8206C1.45345 14.5685 1.29574 14.3072 1.14884 14.0382C0.998861 13.7629 0.864339 13.4846 0.743734 13.2032C0.740641 13.1955 0.737549 13.1877 0.734456 13.18C0.613851 12.8971 0.508708 12.6079 0.417481 12.3141C0.323161 12.0111 0.24585 11.7065 0.185547 11.4034C0.125244 11.1003 0.0788574 10.7865 0.0479329 10.4633C0.0154622 10.1417 0 9.82007 0 9.5C0 9.17993 0.0154622 8.85832 0.0479329 8.53516C0.0788574 8.212 0.125244 7.89811 0.185547 7.59505C0.24585 7.29508 0.321615 6.99512 0.414388 6.69515C0.504069 6.40446 0.609212 6.11686 0.729818 5.83081L0.743734 5.79525C0.867432 5.5092 1.00195 5.23088 1.1473 4.96338C1.2911 4.69897 1.44881 4.43766 1.62199 4.17944C1.79207 3.92741 1.97298 3.68311 2.16626 3.44808C2.35954 3.21305 2.56209 2.9904 2.77702 2.77702C2.9904 2.56364 3.2146 2.35954 3.44808 2.16626C3.68311 1.97298 3.92586 1.79207 4.17944 1.62199C4.43766 1.44881 4.69897 1.2911 4.96338 1.1473L4.98348 1.13802C5.25098 0.992676 5.52157 0.862793 5.79679 0.743734C5.80453 0.740641 5.81226 0.737549 5.81999 0.734456C6.10295 0.613851 6.39209 0.508708 6.68587 0.417481C6.98739 0.323161 7.29045 0.24585 7.59505 0.185547Z" fill="white"/>
                            </g>
                            <defs>
                            <clipPath id="clip0_236_31">
                            <rect width="19" height="19" fill="white"/>
                            </clipPath>
                            </defs>
                        </svg>
                    </div>
                    {t("footer.btn-4")}</button>
                </Link>
               
                
                     
                      
                {/* <div>Payment Method</div> */}
            </div>
        </div>
        <div className="px-2 lg:px-16 second-footer py-4 flex justify-center">
            <div className='text-center md:text-start'>
                © {t("footer.hint-footer")}
            </div>
        </div>
        {/* <div className="grid grid-cols-1  md:grid-cols-2 px-2 lg:px-16 second-footer py-4">
            <div className='text-center md:text-start'>
                © {t("footer.hint-footer")}
            </div>
            <div className="flex justify-center md:justify-end gap-5">
                <div>{t("footer.terms-&-conditions")}</div>
                <div>{t("footer.privacy-policy")}</div>
            </div>
        </div> */}
    </footer>)
}
export default Footer